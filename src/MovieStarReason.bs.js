// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");

function printState(state, label) {
  console.log(label);
  console.log(state.contents);
  return /* () */0;
}

var defaultState_movies = /* array */[];

var defaultState = {
  movies: defaultState_movies,
  isLoadingMovies: false,
  favoritedMovies: /* [] */0
};

function execute(f, s, i) {
  return Curry._1(i, Curry._1(f, s));
}

function asyncTopMovies(state, server, stateObserver) {
  var intermediateState_movies = state.movies;
  var intermediateState_favoritedMovies = state.favoritedMovies;
  var intermediateState = {
    movies: intermediateState_movies,
    isLoadingMovies: true,
    favoritedMovies: intermediateState_favoritedMovies
  };
  Curry._1(stateObserver, intermediateState);
  return Curry._1(server, (function (m) {
                return Curry._1(stateObserver, {
                            movies: /* array */[{
                                title: "Test Movie"
                              }],
                            isLoadingMovies: false,
                            favoritedMovies: intermediateState_favoritedMovies
                          });
              }));
}

function viewTopMovies(state) {
  return {
          state: {
            movies: /* array */[
              {
                title: "Wayne's World"
              },
              {
                title: "Wayne's World 2"
              },
              {
                title: "Unabomber"
              },
              {
                title: "Cat in the Hat"
              },
              {
                title: "Sharkboy and Lavagirl"
              }
            ],
            isLoadingMovies: state.isLoadingMovies,
            favoritedMovies: state.favoritedMovies
          },
          dataDependency: /* TopMovies */0
        };
}

function toggleFavoriteMovie(movie, state) {
  var match = List.filter((function (m) {
            return Caml_obj.caml_equal(m, movie);
          }))(state.favoritedMovies);
  var favoritedMovies = match ? List.filter((function (m) {
              return Caml_obj.caml_notequal(m, movie);
            }))(state.favoritedMovies) : /* :: */[
      movie,
      state.favoritedMovies
    ];
  return {
          movies: state.movies,
          isLoadingMovies: state.isLoadingMovies,
          favoritedMovies: favoritedMovies
        };
}

function clearFavoriteMovies(state) {
  return {
          movies: state.movies,
          isLoadingMovies: state.isLoadingMovies,
          favoritedMovies: /* [] */0
        };
}

var Command = {
  asyncTopMovies: asyncTopMovies,
  viewTopMovies: viewTopMovies,
  toggleFavoriteMovie: toggleFavoriteMovie,
  clearFavoriteMovies: clearFavoriteMovies
};

exports.printState = printState;
exports.defaultState = defaultState;
exports.execute = execute;
exports.Command = Command;
/* No side effect */
