// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Caml_obj = require("bs-platform/lib/js/caml_obj.js");
var Caml_array = require("bs-platform/lib/js/caml_array.js");

function printState(state, label) {
  console.log(label);
  console.log(state.contents);
  return /* () */0;
}

var state = {
  contents: {
    movies: /* array */[],
    favoritedMovies: /* [] */0
  }
};

function viewTopMovies(state) {
  return {
          movies: /* array */[{
              title: "Wayne's World"
            }],
          favoritedMovies: state.favoritedMovies
        };
}

function toggleFavoriteMovie(state, movie) {
  var match = List.filter((function (m) {
            return Caml_obj.caml_equal(m, movie);
          }))(state.favoritedMovies);
  var favoritedMovies = match ? List.filter((function (m) {
              return Caml_obj.caml_notequal(m, movie);
            }))(state.favoritedMovies) : /* :: */[
      movie,
      state.favoritedMovies
    ];
  return {
          movies: state.movies,
          favoritedMovies: favoritedMovies
        };
}

var Command = {
  viewTopMovies: viewTopMovies,
  toggleFavoriteMovie: toggleFavoriteMovie
};

printState(state, "Initial state");

state.contents = viewTopMovies(state.contents);

state.contents = toggleFavoriteMovie(state.contents, Caml_array.caml_array_get(state.contents.movies, 0));

printState(state, "After favoriting");

state.contents = toggleFavoriteMovie(state.contents, Caml_array.caml_array_get(state.contents.movies, 0));

printState(state, "After update");

exports.printState = printState;
exports.state = state;
exports.Command = Command;
/*  Not a pure module */
